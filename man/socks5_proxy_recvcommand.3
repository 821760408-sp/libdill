.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "SOCKS5_PROXY_RECVCOMMAND" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
socks5_proxy_recvcommand \- Receive and validate incoming command to
proxy
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ socks5_proxy_recvcommand(
\ \ \ \ int\ s,
\ \ \ \ struct\ ipaddr\ *\ addr,
\ \ \ \ int64_t\ deadline);
\f[]
.fi
.SH DESCRIPTION
.PP
\f[B]WARNING: This is experimental functionality and the API may change
in the future.\f[]
.PP
SOCKS5 is an application\-level protocol described in RFC 1928.
SOCKS5 protocol is used to negotiate a connection via a proxy server.
The underlying transport must be a bytestream.
.PP
This function interprets the incoming client command request.
The request may be one of SOCKS5_CONNECT, SOCKS5_BIND, or
SOCKS5_UDP_ASSOCIATE.
.PP
\f[B]s\f[]: Handle of the underlying socket.
It must be a bytestream protocol.
.PP
\f[B]addr\f[]: Out parameter, the address portion of the client command
request.
.PP
\f[B]deadline\f[]: A point in time when the operation should time out,
in milliseconds.
Use the \f[B]now\f[] function to get your current point in time.
0 means immediate timeout, i.e., perform the operation if possible or
return without blocking if not.
\-1 means no deadline, i.e., the call will block forever if the
operation cannot be performed.
.PP
No socket is created.
.PP
This function is not available if libdill is compiled with
\f[B]\-\-disable\-sockets\f[] option.
.SH RETURN VALUE
.PP
In case of success the function returns command.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]EBADF\f[]: Invalid handle.
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.IP \[bu] 2
\f[B]ECONNRESET\f[]: Broken connection.
.IP \[bu] 2
\f[B]ENOTSUP\f[]: The handle does not support this operation.
.IP \[bu] 2
\f[B]EPROTO\f[]: Error in the client <\-> proxy protocol.
.IP \[bu] 2
\f[B]ETIMEDOUT\f[]: Deadline was reached.
.SH EXAMPLE
.IP
.nf
\f[C]
int\ s\ =\ tcp_connect(&proxy_addr,\ \-1);
int\ err\ =\ socks5_client_connect(s,\ &uname,\ &passwd,\ &remote_addr,\ \-1);
if(err)\ return\ \-1;
bsend(s,\ "ABC",\ 3,\ \-1);
char\ buf[3];
brecv(s,\ buf,\ sizeof(buf),\ \-1);
tcp_close(s);
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]now\f[](3) \f[B]socks5_client_connect\f[](3)
\f[B]socks5_client_connectbyname\f[](3) \f[B]socks5_proxy_auth\f[](3)
\f[B]socks5_proxy_recvcommandbyname\f[](3)
\f[B]socks5_proxy_sendreply\f[](3)
